/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jogodavelha;

/**
 *
 * @author Aluno
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        jogadorAtual = true;
        partida = new Jogo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B00 = new javax.swing.JButton();
        B11 = new javax.swing.JButton();
        B02 = new javax.swing.JButton();
        B10 = new javax.swing.JButton();
        B01 = new javax.swing.JButton();
        B12 = new javax.swing.JButton();
        B20 = new javax.swing.JButton();
        B21 = new javax.swing.JButton();
        B22 = new javax.swing.JButton();
        Texto = new javax.swing.JLabel();
        Restart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        B00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B00ActionPerformed(evt);
            }
        });

        B11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B11ActionPerformed(evt);
            }
        });

        B02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B02ActionPerformed(evt);
            }
        });

        B10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B10ActionPerformed(evt);
            }
        });

        B01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B01ActionPerformed(evt);
            }
        });

        B12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B12ActionPerformed(evt);
            }
        });

        B20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B20ActionPerformed(evt);
            }
        });

        B21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B21ActionPerformed(evt);
            }
        });

        B22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B22ActionPerformed(evt);
            }
        });

        Restart.setText("Jogar Novamente");
        Restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(60, 60, 60)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(B00, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(B01, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(B10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(B11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(B20, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(B21, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(Texto, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(B22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B02, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(Restart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(B02, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(B00, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(B01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(B12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(B11, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(B10, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B22, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Texto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Restart, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(0, 47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fimDeJogo(){
       B00.setEnabled(false);
       B01.setEnabled(false);
       B02.setEnabled(false);
       B10.setEnabled(false);
       B11.setEnabled(false);
       B12.setEnabled(false);
       B20.setEnabled(false);
       B21.setEnabled(false);
       B22.setEnabled(false);
       Restart.setEnabled(true);
    }
    private void B21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B21ActionPerformed
        if(B21.getText().equals("")){
            if(jogadorAtual){
                B21.setText("x");
            }
            else{
                 B21.setText("O");
            }
        }
        partida.realizarJogada(2, 1, jogadorAtual);
        if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B21ActionPerformed

    private void B00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B00ActionPerformed
        // TODO add your handling code here:
        if(B00.getText().equals("")){
            if(jogadorAtual){
                B00.setText("x");
            }
            else{
                 B00.setText("O");
            }
        }
         partida.realizarJogada(0, 0, jogadorAtual);
          if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B00ActionPerformed

    private void B01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B01ActionPerformed
        if(B01.getText().equals("")){
            if(jogadorAtual){
                B01.setText("x");
            }
            else{
                 B01.setText("O");
            }
        }
        partida.realizarJogada(0, 1, jogadorAtual);
        if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }        
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B01ActionPerformed

    private void B02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B02ActionPerformed
        if(B02.getText().equals("")){
            if(jogadorAtual){
                B02.setText("x");
            }
            else{
                 B02.setText("O");
            }
        }
        partida.realizarJogada(0, 2, jogadorAtual);
        if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B02ActionPerformed

    private void B10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B10ActionPerformed
        if(B10.getText().equals("")){
            if(jogadorAtual){
                B10.setText("x");
            }
            else{
                 B10.setText("O");
            }
        }
        partida.realizarJogada(1, 0, jogadorAtual);
        if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B10ActionPerformed

    private void B11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B11ActionPerformed
        if(B11.getText().equals("")){
            if(jogadorAtual){
                B11.setText("x");
            }
            else{
                 B11.setText("O");
            }
        }
        partida.realizarJogada(1, 1, jogadorAtual);
        if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B11ActionPerformed

    private void B12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B12ActionPerformed
        if(B12.getText().equals("")){
            if(jogadorAtual){
                B12.setText("x");
            }
            else{
                 B12.setText("O");
            }
        }
        partida.realizarJogada(1, 2, jogadorAtual);
        if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B12ActionPerformed

    private void B20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B20ActionPerformed
        if(B20.getText().equals("")){
            if(jogadorAtual){
                B20.setText("x");
            }
            else{
                 B20.setText("O");
            }
        }
        partida.realizarJogada(2, 0, jogadorAtual);
        if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B20ActionPerformed

    private void B22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B22ActionPerformed
        if(B22.getText().equals("")){
            if(jogadorAtual){
                B22.setText("x");
            }
            else{
                 B22.setText("O");
            }
        }
        partida.realizarJogada(2, 2, jogadorAtual);
        if(partida.verificarVitoria(jogadorAtual)){//verifica se houve vencedor
            if(jogadorAtual){
                Texto.setText("jogador 1 venceu!");
            }
            else{
                Texto.setText("jogador 2 venceu!");
            }
            fimDeJogo();
        }
        if(jogadorAtual){
            jogadorAtual=false;
        }
        else{
            jogadorAtual=true;
        }
    }//GEN-LAST:event_B22ActionPerformed

    private void RestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestartActionPerformed
       // TODO add your handling code here:
       partida = new Jogo();
       B00.setText("");       
       B01.setText("");  
       B02.setText("");  
       B10.setText("");  
       B11.setText("");  
       B12.setText("");  
       B20.setText("");  
       B21.setText("");  
       B22.setText("");  
       B00.setEnabled(true);       
       B01.setEnabled(true);
       B02.setEnabled(true);
       B10.setEnabled(true);
       B11.setEnabled(true);
       B12.setEnabled(true);
       B20.setEnabled(true);
       B21.setEnabled(true);
       B22.setEnabled(true);
       Texto.setText("");
       jogadorAtual = true;
    }//GEN-LAST:event_RestartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    private Jogo partida;
    private boolean jogadorAtual;//true caso seja o jogador 1 e false caso seja o jogador 2
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B00;
    private javax.swing.JButton B01;
    private javax.swing.JButton B02;
    private javax.swing.JButton B10;
    private javax.swing.JButton B11;
    private javax.swing.JButton B12;
    private javax.swing.JButton B20;
    private javax.swing.JButton B21;
    private javax.swing.JButton B22;
    private javax.swing.JButton Restart;
    private javax.swing.JLabel Texto;
    // End of variables declaration//GEN-END:variables
}
